# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[pytest]
addopts = --strict -v
markers =
    gpu
    slow
    nll
    extra


##############################################################################
# --- Tox Settings------------------------------------------------------------
##############################################################################

[tox]
skipsdist = true
skip_missing_interpreters = true
envlist =
    cov-init
    py{36, 37}-torch{12, 13, 14, 15, 16, 17, 18, 19}
    py{38, 39}-torch{14, 15, 16, 17, 18, 19, 20, nightly}
    py{310, 311}-torch{20, nightly}
    cov-report
    misc

[travis]
os =
    linux: py{36, 37}-torch{12, 13, 14, 15, 16, 17, 18, 19}, py{38, 39}-torch{14, 15, 16, 17, 18, 19, 20, nightly}, py{310,311}-torch{20, nightly}
    osx: py{36, 37}-torch{12, 13, 14, 15, 16, 17, 18, 19}, py{38, 39}-torch{14, 15, 16, 17, 18, 19, 20, nightly}, py{310,311}-torch{20, nightly}

[travis:env]
TORCH =
    1.2: torch12
    1.3: torch13
    1.4: torch14
    1.5: torch15
    1.6: torch16
    1.7: torch17
    1.8: torch18
    1.9: torch19
    2.0: torch20
    nightly: torchnightly

[testenv]
setenv =
    COVERAGE_FILE = .coverage.{envname}
deps =
    torch12: torch>=1.2,<1.3
    torch13: torch>=1.3,<1.4
    torch14: torch>=1.4,<1.5
    torch15: torch>=1.5,<1.6
    torch16: torch>=1.6,<1.7
    torch17: torch>=1.7,<1.8
    torch18: torch>=1.8,<1.9
    torch19: torch>=1.9,<2.0
    torch20: torch>=2.0,<2.1
    pytest-xdist
    -e .[coverage]
commands =
    torchnightly: python -m pip uninstall -y torch
    torchnightly: python -m pip install torch_nightly -f https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html
    pytest --cov=qucumber --no-cov-on-fail {posargs}


[testenv:cov-init]
setenv =
    COVERAGE_FILE = .coverage
deps = coverage
commands =
    coverage erase


[testenv:cov-report]
setenv = {[testenv:cov-init]setenv}
depends =
    cov-init
    py{36, 37}-torch{12, 13, 14, 15, 16, 17, 18, 19}
    py{38, 39}-torch{14, 15, 16, 17, 18, 19, 20, nightly}
    py{310, 311}-torch{20, nightly}
deps = {[testenv:cov-init]deps}
commands =
    coverage combine
    coverage report


[testenv:misc]
setenv =
    SPHINXOPTS = -nWT
deps =
    -e .[style,docs]
whitelist_externals = make
ignore_errors = true
commands =
    inv style
    make -C {toxinidir}/docs -e test
    make -C {toxinidir}/docs -e spelling
    make -C {toxinidir}/docs -e linkcheck


##############################################################################
# --- Coverage Settings-------------------------------------------------------
##############################################################################


[coverage:run]
branch = True
source = qucumber


[coverage:report]
precision = 2
show_missing = True

# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    def __str__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

omit =
    .tox
    qucumber/__version__.py
    **/__init__.py
    setup.py
    tasks.py
    tests/*



# we don't use pydocstyle at the moment, but this is a working
# config if we ever decide to start using it
[pydocstyle]
inherit = false
convention = numpy
# ignore tests, docs, build and any folder starting with a .
match-dir = (?!tests)(?!docs)(?!build)[^\.].*
# ignore files starting with test, setup, tasks and ending with .py
match = (?!test)(?!setup)(?!tasks)[^\._].*\.py


[flake8]
application-import-names = qucumber
import-order-style = pep8
max-line-length = 80
select = C,E,F,W,B,B950,T

ignore =
    E203    # not PEP8 compliant (doesn't like whitespace before ':' which is annoying when slicing)
    E501    # B950 takes care of this better (max-line-length)
    W503    # not PEP8 compliant (this wants line breaks AFTER binary ops instead of before)

max-complexity = 15
exclude =
    .tox
    .git
    __pycache__
    build
    dist
per-file-ignores =
    # Ignore "imported but unused" errors for all __init__.py files.
    **/__init__.py: F401, F403
